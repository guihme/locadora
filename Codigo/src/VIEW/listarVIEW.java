/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import DAO.LocadoraDAO;
import DTO.LocadoraDTO;
import DTO.LocalizacaoDTO;
import DTO.VeiculoDTO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author guilh
 * Classe para janela de listas locadoras e veiculos
 */
public class listarVIEW extends javax.swing.JFrame {

    /**
     * Creates new form listarVIEW
     */
    public listarVIEW() {
        initComponents();
        listarlocadoras();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaVeiculos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        txtPesquisa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxFiltro = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Marca", "Modelo", "Acessórios", "Categoria", "Ano", "Preço", "Locadora", "Telefone", "Endereço", "Bairro", "Cidade", "Estado"
            }
        ));
        tabelaVeiculos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaVeiculos);

        jLabel1.setText("Todos veículos");

        btnPesquisar.setText("Buscar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar por:");

        cbxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Marca", "Modelo", "Acessórios", "Categoria", "Ano", "Preço", "Locadora", "Telefone", "Endereço", "Bairro", "Cidade", "Estado" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(409, 409, 409)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(150, 150, 150)
                                .addComponent(btnPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        filtrarBusca();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listarVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listarVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listarVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listarVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listarVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cbxFiltro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaVeiculos;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables

     /**
     * apresenta todas as locadora e suas infomações cadastradas no banco de dados
     */
   private void listarlocadoras(){
       try {
           LocadoraDAO locadora = new LocadoraDAO();
           LocadoraDTO loca = new LocadoraDTO();
           LocalizacaoDTO localizacao = new LocalizacaoDTO();
           
           DefaultTableModel model = (DefaultTableModel) tabelaVeiculos.getModel();
           model.setNumRows(0);
           
           ArrayList<VeiculoDTO> lista = locadora.listarVeiculos();
           
           for(int num = 0; num < lista.size(); num++) {
               loca = locadora.encontrarLocadora(lista.get(num).getId_locadora());
               localizacao = loca.getLocalizacao();
               model.addRow(new Object[] {
                   lista.get(num).getMarca(),
                   lista.get(num).getModelo(),
                   lista.get(num).getAcessorios(),
                   lista.get(num).getCategoria(),
                   lista.get(num).getAno(),
                   lista.get(num).getPreco(),
                   loca.getNome(),
                   loca.getTelefone(),
                   localizacao.getEndereco(),
                   localizacao.getBairro(),
                   localizacao.getCidade(),
                   localizacao.getEstado(),
               });
           }
           
       } catch (Exception e) {
           JOptionPane.showMessageDialog(null,"listar valores" + e);
       }
   } 
     /**
     * filtro de buscas
     */
   private void filtrarBusca(){
       LocadoraDAO locadora = new LocadoraDAO();
       LocadoraDTO loca = new LocadoraDTO();
       LocalizacaoDTO localizacao = new LocalizacaoDTO();
       String filtroSelecionado[] = new String[13];
       String pesquisa = txtPesquisa.getText();

       filtroSelecionado[0] = "selecione";
       filtroSelecionado[1] = "marca";
       filtroSelecionado[2] = "modelo";
       filtroSelecionado[3] = "acessorios";
       filtroSelecionado[4] = "categoria";
       filtroSelecionado[5] = "ano";
       filtroSelecionado[6] = "preco";
       filtroSelecionado[7] = "nome";
       filtroSelecionado[8] = "telefone";
       filtroSelecionado[9] = "endereco";
       filtroSelecionado[10] = "bairro";
       filtroSelecionado[11] = "cidade";
       filtroSelecionado[12] = "estado";
       
       String coluna = filtroSelecionado[cbxFiltro.getSelectedIndex()];
       
       
       if(cbxFiltro.getSelectedIndex() == 0){
           listarlocadoras();
       }else if(cbxFiltro.getSelectedIndex() <= 6){

           DefaultTableModel model = (DefaultTableModel)tabelaVeiculos.getModel();
           model.setNumRows(0);
           
           ArrayList<VeiculoDTO> lista = locadora.fitrarPorVeiculo(coluna,pesquisa);
          
           for(int num = 0; num < lista.size(); num++) {
               loca = locadora.encontrarLocadora(lista.get(num).getId_locadora());
               localizacao = loca.getLocalizacao();
               model.addRow(new Object[] {
                   lista.get(num).getMarca(),
                   lista.get(num).getModelo(),
                   lista.get(num).getAcessorios(),
                   lista.get(num).getCategoria(),
                   lista.get(num).getAno(),
                   lista.get(num).getPreco(),
                   loca.getNome(),
                   loca.getTelefone(),
                   localizacao.getEndereco(),
                   localizacao.getBairro(),
                   localizacao.getCidade(),
                   localizacao.getEstado(),
               });
           }
        }else{
           DefaultTableModel model = (DefaultTableModel)tabelaVeiculos.getModel();
           model.setNumRows(0);
           
           ArrayList<LocadoraDTO> lista = locadora.fitrarPorLocadora(coluna,pesquisa);
          
           for(int num = 0; num < lista.size(); num++) {
               ArrayList<VeiculoDTO> veiculos = lista.get(num).getVeiculos();
               localizacao = lista.get(num).getLocalizacao();
               
               for(int num2 = 0; num2 < veiculos.size(); num2++){
                model.addRow(new Object[] {
                   veiculos.get(num2).getMarca(),
                   veiculos.get(num2).getModelo(),
                   veiculos.get(num2).getAcessorios(),
                   veiculos.get(num2).getCategoria(),
                   veiculos.get(num2).getAno(),
                   veiculos.get(num2).getPreco(),
                   lista.get(num).getNome(),
                   lista.get(num).getTelefone(),
                   localizacao.getEndereco(),
                   localizacao.getBairro(),
                   localizacao.getCidade(),
                   localizacao.getEstado(),
               });
               }
               
           }
       }
   }
    
}
